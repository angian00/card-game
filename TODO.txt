## Script brainstorming

handlers = 0..n handler
handler = { trigger, command | [0..n] array of command }
trigger(eventSelector) = function(event) --> boolean (true if relevant)
command = {action, [0..n] array of argument}
argument = card || cardSelector
cardSelector = {[0..n] filterSelector , finalSelector }
filterSelector = function(card) --> boolean (true if relevant)
finalSelector = function(array of card) --> array of card


trigger convenzionali sono rappresentati da function pointer costanti:
	battlecry
	deathrattle


Logica esecuzione script:
# applicazione selector
candidateTargets = []
allChars = <friendly minions> + <enemy minions> + <friendly hero> + <enemy hero>

for (c in allChars)
	isCharOk = true
	for s in filterSelectors
		if (not s(c))
			isCharOk = false
			break

	if isCharOk
		candidateTargets.push(c)

targets = finalSelector(candidateTargets)

# invocazione action
for (c in targets)
	apply(action, c)


### v0.3
- meccaniche
	- meccaniche non-script:
		- taunt [Senjin Shieldmasta]
		- frozen [Frost Nova]
		- windfury [Windfury]
		- charge [Stonetusk Boar]

	- azioni engine + carta esempio:
		v hit 	[Holy Smite]
		- restore/give health [Healing Touch]
		- take control [Mind Control]
		- copy card [Mind Vision]
		- verificare draw card [Power Word: Shield]
		- discard card [Succubus]
		- temporary/permanent stat modifiers [Savage Roar, Wild Growth]
		- transform minion in other given minion []
		- summon given minion [Dragonling Mechanic]
		- modifier to spell damage (player buff?)
		- destroy minion
		- trigger: whenever healed
		- trigger: whenever takes damage [Gurubashi Berserker]
		- trigger: summoning []
		- trigger: battlecry
		- trigger: deathrattle
		- aura


	- selectors:
		- damaged/undamaged
		- random
		- enemy/friendly
		- minion/hero/character
		- other minions
		- race

	- precondizioni per play carte
	- buff stack
	- one-shot effects vs buffs

	- gui: visualizzare buff attivi per minion
	- gui: scelta target per carte che ne richiedono uno

- GUI
	- cleanup testo carta:
		[x], $, #, \n
	- togliere stats per Spells
	- tooltip

	- visualizzazione righe distinte array messaggi
	- occupazione 100% schermo
	- rotate/scale carte in mano
	- visualizzare razza


? significato $ e # prima dei numeri in card.text


- mulligan
- esperimenti effetti grafici per attacchi/etc.


++ costruire carte/meccaniche ad hoc



## BUGFIXING
- bug *.jpeg in orig2converted images
- fix favicon iPad
